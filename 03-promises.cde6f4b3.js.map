{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCC,YAAW,KACTJ,EAAQ,C,SAAEH,E,MAAUC,GAAQ,GAC3BA,GAEHM,YAAW,KACTH,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAKFO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAaC,SAASJ,EAAWK,OACjCC,EAAYF,SAASH,EAAUI,OAC/BE,EAASH,SAASF,EAAYG,OAEpC,IAAIG,EAAeL,EAEnB,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAQE,IAC3BvB,EAAcuB,EAAGD,GACdE,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOG,QACd,sBAAoB5B,QAAeC,MAAU,IAInDoB,GAAgBF,EAElBN,EAAWK,MAAQ,GACnBJ,EAAUI,MAAQ,GAClBH,EAAYG,MAAQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const firstDelay = parseInt(delayInput.value);\n  const delayStep = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  let currentDelay = firstDelay;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    currentDelay += delayStep;\n  }\n  delayInput.value = '';\n  stepInput.value = '';\n  amountInput.value = '';\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","firstDelay","parseInt","value","delayStep","amount","currentDelay","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.cde6f4b3.js.map"}